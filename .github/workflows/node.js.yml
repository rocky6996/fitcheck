name: Node.js CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install Dependencies
      run: npm install --legacy-peer-deps
    
    - name: Install Expo CLI
      run: npm install -g expo-cli
    
    - name: Cache Expo Dependencies
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    
    - name: Check Expo Doctor
      run: npx expo-doctor
    
    - name: Verify Files
      run: |
        if [ -f "app.json" ]; then
          echo "app.json exists"
        else
          echo "app.json is missing"
          exit 1
        fi
    
    - name: Build Expo Web
      run: |
        npx expo export:web
      env:
        CI: true
    
    - name: Upload Build Artifact
      uses: actions/upload-artifact@v3
      with:
        name: web-build
        path: web-build/
        retention-days: 5

    - name: Setup EAS
      uses: expo/expo-github-action@v8
      with:
        eas-version: latest
        token: ${{ secrets.EXPO_TOKEN }}
    
    - name: Build Android Preview
      if: github.ref == 'refs/heads/main'
      run: eas build -p android --profile preview --non-interactive
      env:
        EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

  notify:
    needs: build
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Send Notification
      if: ${{ needs.build.result == 'success' }}
      run: |
        echo "Build completed successfully!"
        # Add notification logic here if needed

    - name: Send Failure Notification
      if: ${{ needs.build.result == 'failure' }}
      run: |
        echo "Build failed!"
        # Add failure notification logic here if needed
